; TODO INSERT CONFIG CODE HERE USING CONFIG BITS GENERATOR

; PIC16F887 Configuration Bit Settings

; Assembly source line config statements

#include "p16f887.inc"

; CONFIG1
; __config 0x20D4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0x3FFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
 
 VALORTMR0 EQU .216
 PERIODO    EQU .125
 
 VARS UDATA
 ADC0 RES 1
 ADC1 RES 1
 ADC2 RES 1
 ADC3 RES 1  ;EN ESTAS VARIABLES SE ALMACENA EL VALOR DE LOS CANALES 0-3 DEL ADC
 CONTADOR_ADC RES 1 ;CONTADOR QUE INDICA QUE CANAL SE ESTA LEYENDO
 FLAGS RES 1 ;BIT 0: INDICA SI ESTA EN MODO MANUAL (0) O MODO CONTROL POR COMPUTADORA
 W_RAM RES 1
 STATUS_RAM RES 1
 CONTADOR_PWM RES 1
 AJUSTE_PWM RES 1 ;VARIABLE QUE TENDRA EL VALOR AJUSTADO DEL PWM
 
 TRABAJO1 RES 1 ;ESTABLECE EL MOMENTO EN EL QUE SE COLOCA EN 0 EL VALOR PWM
 TRABAJO2 RES 1 ;LO MISMO QUE TRABAJO 1
 SECUENCIA RES 1 ;VARIABLE QUE PERMITE SABER EN QUE POSICICON DE LA SECUENCIA SE ENCUENTRA
 
 ;----------------- COMUNICACION  SERIAL --------------------------
 CONTADOR_TX RES 1
 VALOR_BIN RES 1
 VALOR_CENTENAS RES 1
 VALOR_DECENAS  RES 1
 VALOR_UNIDADES RES  1
 
 VALOR_CENTENAS_SERVO1 RES 1
 VALOR_DECENAS_SERVO1  RES 1
 VALOR_UNIDADES_SERVO1 RES  1
 
 VALOR_CENTENAS_SERVO2 RES 1
 VALOR_DECENAS_SERVO2  RES 1
 VALOR_UNIDADES_SERVO2 RES  1
 
 VALOR_CENTENAS_SERV03 RES 1
 VALOR_DECENAS_SERVO3  RES 1
 VALOR_UNIDADES_SERVO3 RES  1
 
 VALOR_CENTENAS_SERVO4 RES 1
 VALOR_DECENAS_SERV04  RES 1
 VALOR_UNIDADES_SERVO4 RES  1
 
RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

; TODO ADD INTERRUPTS HERE IF USED
INT_VECT    CODE 0x0004
    
SAVE:
    MOVWF   W_RAM
    SWAPF   STATUS,W
    MOVWF   STATUS_RAM
    
INT_TMR0:
    BTFSS   INTCON,T0IF
    GOTO    INT_ADC
    
    BCF	INTCON,T0IF
    MOVF    SECUENCIA,W
    ADDWF   PCL, F
    GOTO    INICIO_PERIODO ;este contador LLEVA EN CONTROL DE LA SECUENCIA PARA LA GENERACION PWM
    GOTO    PWM1
    GOTO    PWM2
    
    CLRF    SECUENCIA
    INICIO_PERIODO ;EN LA PRIMERA FASE SE COLOCA EN 1 EL PIN RC0 Y RC3 SE ENCUENTRA EN 0
    BSF	PORTC, RC0 ;SE COLOCA EN 1
    MOVF    TRABAJO1,W 
    CLRF	TMR0
    SUBWF   TMR0,F  ;TMRO =  256 - TRABAJO1
    INCF    SECUENCIA,F ;A LA SIGUIENTE ENTRADA SE EJECUTA PWM1
    GOTO INT_ADC
    
    PWM1
    BCF	PORTC,RC0 ;AL PASAR EL TIEMPO ESTABLECIDO POR LA VARIABLE TRABAJO 1
    BSF	PORTC, RC3
    MOVF   TRABAJO2,W
    CLRF TMR0
    SUBWF   TMR0,F ;256 - TRABAJO2
    INCF SECUENCIA,F
    GOTO INT_ADC
    
    PWM2
    BCF	PORTC,RC0
    BCF	PORTC,RC3
    CLRF	TMR0 ;LA SIGUIENTE INTERRUPCION OCURRIRA DENTRO DE 4.09mS
    INCF SECUENCIA,F
    
    
INT_ADC:
    BTFSS   PIR1, ADIF 
    GOTO    LOAD ;SI NO ESTA ACTIVA SE SALE
    
    BCF	PIR1, ADIF
    MOVF    CONTADOR_ADC,W
    ADDWF   PCL,F   
    GOTO    ES_ADC0
    GOTO    ES_ADC1
    GOTO    ES_ADC2
    GOTO    ES_ADC3
    CLRF    CONTADOR_ADC
    ES_ADC0
    MOVF    ADRESH, W
    MOVWF   ADC0
    BCF	ADCON0,CHS1
    BSF	ADCON0,CHS0 ;SE SELECCIONA EL CANAL 1
    GOTO FIN
    
    ES_ADC1
    MOVF    ADRESH, W
    MOVWF   ADC1
    BSF	ADCON0,CHS1
    BCF	ADCON0,CHS0 ;SE SELECCIONA EL CANAL 2
    GOTO FIN
   
    ES_ADC2
    MOVF    ADRESH,W
    MOVWF   ADC2
    BSF	ADCON0,CHS1
    BSF	ADCON0,CHS0 ;SE SELECCIONA EL CANAL 3
    GOTO FIN
    
    ES_ADC3
    MOVF    ADRESH,W
    MOVWF   ADC3
    BCF	ADCON0,CHS1
    BCF	ADCON0,CHS0 ;SE SELECCIONA CANAL 0
    
    FIN
    INCF    CONTADOR_ADC,F
    BSF	ADCON0,GO ;INICIA CONVERSION
    
LOAD:
    SWAPF   STATUS_RAM,W
    MOVWF   STATUS
    SWAPF   W_RAM,F
    SWAPF   W_RAM,W
    RETFIE
    
SEND_DATA:
    BTFSS   PIR1,TXIF ;SI NO ESTA OCUPADO SE SALTA EL RETURN
    RETURN
   
    ;----- SE DETERMINA QUE DATO HAY QUE ENVIAR -------------------------------
    MOVF    CONTADOR_TX,W
   ADDWF   PCL,F
    GOTO    S0
    GOTO    UNO
    GOTO    DOS
    GOTO    TRES
    GOTO    ESPACIO
    GOTO    S1
    GOTO    CUATRO
    GOTO    CINCO
    GOTO    SEIS
    GOTO    ESPACIO
    GOTO    S2
    GOTO    SIETE
    GOTO    OCHO
    GOTO    NUEVE
    GOTO    ESPACIO
    GOTO    S3
    GOTO    DIEZ
    GOTO    ONCE
    GOTO    DOCE
    GOTO    FIN
    CLRF    CONTADOR
    S1
    MOVLW .65 ;A EN ASSCII
    GOTO    ENVIAR_SIN_SUMA
    UNO
    MOVF    VALOR_CENTENAS_SERVO0,W
    GOTO ENVIAR
    DOS
    MOVF VALOR_DECENAS_SERVO0,W
    GOTO ENVIAR
    TRES
    CUATRO
    CINCO
    SEIS
    SIETE
    OCHO
    
    ENVIAR
    ADDLW   .48 ;SE PASA DE BCD A ASCII
    ENVIAR_SIN_SUMA
    MOVWF   TXREG
    INCF    CONTADOR,F
    RETURN
    
MAIN_PROG CODE                      ; let linker place main program
 
 START
    BSF	STATUS, IRP ;BANCO 2 Y 3 EN EL DIRECCIONAMIENTO INDIRECTO
    BSF	STATUS, RP1
    BSF	STATUS, RP0 ;BANCO 3
    
    MOVLW B'00001111'
    MOVWF ANSEL
    CLRF    ANSELH 
    
    BCF	OPTION_REG, T0CS ;FUENTE DE RELOL FOSC/4
    BCF	OPTION_REG, PSA ;PRESCALER ASIGNADO AL TMR0
    BCF	OPTION_REG, PS2
    BSF	OPTION_REG,PS1
    BSF	OPTION_REG,PS0 ;PRESCALER DE 1:16 (ESTO PARA QUE LOS VALORES OBTENIDOS EN LA RUTINA
			;VALOR PWM, TAMBIEN SEAN VALIDOS PARA ESTE TIMER)
    
    BCF	STATUS,RP1 ;BANCO 1
    MOVLW   .255
    MOVWF   TRISA
    CLRF	   TRISC
    CLRF	   TRISD
    
    
    
    ;------------- INTERRUPCIONES -------------------------------------------------
    BSF	INTCON,GIE 
    BSF	INTCON, PEIE
  
    
    BSF	PIE1, ADIE ;INTERRUPCION ADC ACTIVADA
    ;---------------------------------------------------------------------------------------
    MOVLW .255 
    MOVWF  PR2 ;PERIODO DE  4.09 mS aproximadamente EN PWM
    CLRF    ADCON1 
     ;--------------------  EUSART ----------------------------------------------------
     BCF	TXSTA,TX9
     BSF	TXSTA, TXEN
     BCF	TXSTA, SYNC
     BSF	TXSTA, BRGH
     
    
    BCF	STATUS,RP0 ;BANCO 0
    
    BSF	RCSTA, SPEN
    BCF	RCSTA, RX9
    BSF	RCSTA, CREN

    ;------------------------- SIGIENTDO CON LAS INTERRUPCIONES -----------------
    
    BCF	INTCON, T0IF
    CLRF	TMR0
    BSF	INTCON, T0IE
    
    MOVLW   B'00001100' 
    MOVWF   CCP1CON ;MODO DE PWM EN P1A LOS DEMAS SON PINES NORMALES 
    MOVWF   CCP2CON ;PWM TAMBIEN
    
    MOVLW   B'0000110' ;TMR2 ENCENDIDO CON PRESCALES DE 1:16 Y POST SCALER DE 1 
    MOVWF   T2CON
    
    MOVLW   B'01000001' ;ADC CON FOSC/8, CANAL 0 Y ENCENDIDO
    MOVWF   ADCON0
    
    CLRF    ADC0
    CLRF    ADC1
    CLRF    ADC2
    CLRF    ADC3
    CLRF    CONTADOR_ADC
    CLRF    FLAGS
    CLRF    SECUENCIA
    CLRF    CONTADOR_RC
    
    BSF	ADCON0, GO ;INICIA LA CONVERSION
    
LOOP:
    ;SE ENTRA EN ESTA SECCION DEL CODIGO SI FLAGS EN EL BIT 0 ESTA EN 0, INDICANDO QUE ESTA EN
    ;MODO MANUAL. 
    MOVLW   ADC0
    MOVWF   FSR ;VALOR DEL ADC PARA EL VALO
     CALL    VALOR_PWM
    MOVF    AJUSTE_PWM,W
    MOVWF   CCPR1L
    
    MOVLW    ADC1
    MOVWF   FSR
    CALL    VALOR_PWM
    MOVF    AJUSTE_PWM
    MOVWF   CCPR2L
    
    MOVLW   ADC2
    MOVWF   FSR
    CALL   VALOR_PWM
    MOVF    AJUSTE_PWM,W
    MOVWF TRABAJO1
    	
    MOVLW   ADC3
    MOVWF   FSR
    CALL   VALOR_PWM
    MOVF    AJUSTE_PWM,W
    MOVWF TRABAJO2
    ;--------------------- AQUI SE CONVIERTE EL VALOR DEL SERVO EN BCD ---------------------------------
    MOVF    ADC0,W
    MOVWF   VALOR_BIN
   CALL CONVERTIR_BIN_TO_BCD
   MOVF VALOR_CENTENAS,W
   MOVWF    VALOR_CENTENAS_SERVO0
   MOVF	VALOR_DECENAS,W
   MOVWF  VALOR_DECENAS_SERVO0
   MOVF	   VALOR_UNIDADES,W
   MOVWF    VALOR_UNIDADIES_SERVO0
   
   MOVF    ADC1,W
   MOVWF   VALOR_BIN
   CALL CONVERTIR_BIN_TO_BCD
   MOVF VALOR_CENTENAS,W
   MOVWF    VALOR_CENTENAS_SERVO1
   MOVF	VALOR_DECENAS,W
   MOVWF  VALOR_DECENAS_SERVO1
   MOVF	   VALOR_UNIDADES,W
   MOVWF    VALOR_UNIDADIES_SERVO1
   
   MOVF    ADC2,W
    MOVWF   VALOR_BIN
   CALL CONVERTIR_BIN_TO_BCD
   MOVF VALOR_CENTENAS,W
   MOVWF    VALOR_CENTENAS_SERVO2
   MOVF	VALOR_DECENAS,W
   MOVWF  VALOR_DECENAS_SERVO2
   MOVF	   VALOR_UNIDADES,W
   MOVWF    VALOR_UNIDADIES_SERVO2
   
   MOVF    ADC3,W
    MOVWF   VALOR_BIN
   CALL CONVERTIR_BIN_TO_BCD
   MOVF VALOR_CENTENAS,W
   MOVWF    VALOR_CENTENAS_SERVO3
   MOVF	VALOR_DECENAS,W
   MOVWF  VALOR_DECENAS_SERVO3
   MOVF	   VALOR_UNIDADES,W
   MOVWF    VALOR_UNIDADIES_SERVO3
   
   
    GOTO LOOP    

CONVERTIR_BIN_TO_BCD:
    CLRF    VALOR_CENTENAS
    CLRF    VALOR_DECENAS
    CLRF    VALOR_UNIDADES
    ;PRIMERO SE INICIA CON LAS CENTENAS
    CENTENAS
    MOVLW   .100
    SUBWF   VALOR_BIN,W    ;EN EL FSR SE COLOCA LA DIRECCION DEL VALOR A CONVERTIR
    BTFSS   STATUS, C	; SI EL BIT C ES 1 QUIERE DECIR QUE INDF >= W 
    GOTO    DECENAS ;SI EL BIT ES CERO ES EJECUTA ESTO, LO QUE QUIERE DECIR QUE YA EL NUMEOR EN INDF
    ;ES MENOR O IGUAL A 100
    
    INCF    VALOR_CENTENAS,F
    MOVWF   VALOR_BIN
    GOTO CENTENAS ;VUELVE A RESTAR
    
    
    DECENAS
    MOVLW   .10
    SUBWF   VALOR_BIN,W
    BTFSS   STATUS,C  ;LO MISMO QUE CON CENTENAS 
    GOTO UNIDADES
    
    INCF    VALOR_DECENAS,F
    MOVWF   VALOR_BIN
    GOTO DECENAS
    
    UNIDADES
    MOVLW .1
    SUBWF   VALOR_BIN,W
    BTFSS   STATUS,C ;MISMA LOGICA QUE ANTERIORMENTE
    RETURN
    
    INCF    VALOR_UNIDADES,F
    MOVWF VALOR_BIN
    GOTO UNIDADES
    
    
    
VALOR_PWM:
    ;ESTA FUNCION LO QUE REALIZARA ES AJUSTAR EL VALOR QUE SE ENCUENTRA EN LA DIRECCION A LA
    ;QUE APUNTA EL REGISTRO SFR A UN VALOR EN EL CUAL EL PWM DE SALIDA TENGA UN ANCHO MINIMO
    ;DE 0.5 mS Y UN MAXIMO DE 2.4mS PARA QUE SE PUEDE APROVECHAR TODO EL RANGO DEL SERVOMOTOR
    BCF	STATUS, IRP ;DIRECCIONAMIENTO INDIRECTO APUNTANDO A BANCOS 0 Y 1
    
    BCF	STATUS,C ;SE COLOCA EN 0 BIT C PARA QUE RRF FUNCIONE COMO UN SHIFT 
    RRF	INDF, W ;SE DIVIDE POR 2 EL VALOR QUEDANDO ENTRE UN RANGO DE 0 A 126
    ADDLW   .31 ;SE LE SUMA 31 PARA QUE EL RESULTADO QUEDE ENTRE 31 Y 157 LO QUE SE TRADUCE A UN
		;ANCHO DE PULSO DE ENTRE 0.496 mS y 2.512 mS ABARCANDO LOS ANCHOS NECESARIOS
		;PARA QUE EL SERVOMOTOR FUNCIONEN DE 0 A 180 GRADOS
   MOVWF    AJUSTE_PWM 
   BSF	STATUS, IRP ;SE VUELVE A APUNTAR A LOS BANCOS 2 Y 3 PARA LA EEPROM
   RETURN
    
    END