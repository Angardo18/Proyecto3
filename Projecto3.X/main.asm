; TODO INSERT CONFIG CODE HERE USING CONFIG BITS GENERATOR

; PIC16F887 Configuration Bit Settings

; Assembly source line config statements

#include "p16f887.inc"

; CONFIG1
; __config 0x20D4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0x3FFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
 
 VALORTMR0 EQU .216
 PERIODO    EQU .125
 
 VARS UDATA
 ;-------------------- USO DEL ADC -----------------------------------------------------------------------------------------------
 ADC0 RES 1
 ADC1 RES 1
 ADC2 RES 1
 ADC3 RES 1  ;EN ESTAS VARIABLES SE ALMACENA EL VALOR DE LOS CANALES 0-3 DEL ADC
 CONTADOR_ADC RES 1 ;CONTADOR QUE INDICA QUE CANAL SE ESTA LEYENDO
 ;------------------------------------------------------------------------------------------------------------------------------------
 ;------------------------------- CONTROL DE EJECUCION -------------------------------------------------------------------
 OPCION RES 1 ;1 ESTA EN MODOD ADC 2  EN MODO COMPUTADOR 4 REPRODUCE LA SECUENCIA DE LA EEPROM
 FLAGS	RES 1 ;BIT 0: SE USA PARA INDICAR QUE SE TIENE QUE GUARDAR LA POSICION ACTUAL EN LA EEPROM
	;BIT 1: INDICA QUE SE QUIERE REINICIAR LA EEPROM (NO SE BORRA SOLO SE COMIENZA EN 0 DE NUEVO)
 DELAYMS RES 1
 DELAY2	RES 1
 PORTA_ANTERIOR RES 1
 PORTA_ACTUAL RES 1
 ;-------------------------------------------------------------------------------------------------------------------------------------
 ;---------------------------------------- GUARDADO DEL AMBIENTE EN INTERRUPCION ------------------------------
 W_RAM RES 1
 STATUS_RAM RES 1
 FSR_RAM RES 1
 ;---------------------------- VARIABLES DE PWM --------------------------------------------------------------------------
 PWM0 RES 1
 PWM1 RES 1
 PWM2 RES 1
PWM3 RES 1
 ;------------------------------------------------------------------------------------------------------------------------------------
 ;-------------------------- CONTROL DE PWM GENERADO POR SOFTWARE --------------------------------------------
 ;CONTADOR_PWM RES 1 ;CUENTA 
 AJUSTE_PWM RES 1 ;VARIABLE QUE TENDRA EL VALOR AJUSTADO DEL PWM
 
 TRABAJO1 RES 1 ;ESTABLECE EL MOMENTO EN EL QUE SE COLOCA EN 0 EL VALOR PWM
 TRABAJO2 RES 1 ;LO MISMO QUE TRABAJO 1
 SECUENCIA RES 1 ;VARIABLE QUE PERMITE SABER EN QUE POSICICON DE LA SECUENCIA SE ENCUENTRA
 ;-------------------------------------------------------------------------------------------------------------------------------------
 ;----------------- COMUNICACION  SERIAL ---------------------------------------------------------------------------------
 CONTADOR_TX RES 1 ;ESTE CONTADOR LLEVA EL REGISTRO DE QUE DATO SE TIENE QUE ENVIAR
 CONTADOR_RC RES 1 ;CONTADOR USADO PARA LLEVAR EL REGISTRO DE LOS DATOS RECIBIDOS
 
 SERVO0_CENTENAS_RX  RES 1
 SERVO0_DECENAS_RX  RES 1
 SERVO0_UNIDADES_RX  RES 1
 
 SERVO1_CENTENAS_RX  RES 1
 SERVO1_DECENAS_RX  RES 1
 SERVO1_UNIDADES_RX  RES 1
 
 SERVO2_CENTENAS_RX  RES 1
 SERVO2_DECENAS_RX  RES 1
 SERVO2_UNIDADES_RX  RES 1

 SERVO3_CENTENAS_RX  RES 1
 SERVO3_DECENAS_RX  RES 1
 SERVO3_UNIDADES_RX  RES 1 ;ESTAS VARIABLES REPRESENTAN EL VALOR RECIBIDO PARA EL SERVO DESDE LA PC
  
 SERVO_GUARDAR RES 1 ;REPRESENTA EL VALOR DEL SERVO QUE SE VA A GUARDAR.
 RC_AUX RES 1
 ;VALORES EN BCD DEL SERVO
 VALOR_CENTENAS_SERVO0 RES 1
 VALOR_DECENAS_SERVO0  RES 1
 VALOR_UNIDADES_SERVO0 RES  1
 
 VALOR_CENTENAS_SERVO2 RES 1
 VALOR_DECENAS_SERVO2  RES 1
 VALOR_UNIDADES_SERVO2 RES  1
 
 VALOR_CENTENAS_SERVO3 RES 1
 VALOR_DECENAS_SERVO3  RES 1
 VALOR_UNIDADES_SERVO3 RES  1
 
 VALOR_CENTENAS_SERVO1 RES 1
 VALOR_DECENAS_SERVO1  RES 1
 VALOR_UNIDADES_SERVO1 RES  1
 ;-------------------------------------------------------------------------------------------------------------------------------
 ;--------- CONVERSION BINARIO A BCD-------------------------------------------------------------------------------
 VALOR_BIN RES 1
 VALOR_CENTENAS RES 1
 VALOR_DECENAS  RES 1
 VALOR_UNIDADES RES  1
 ;------------------------------------------------------------------------------------------------------------------------------
 ;----------- VALORES BIN DE LA RECEPCION ------------------------------------------------------------------------
 BIN_SERVO0 RES 1
 BIN_SERVO1 RES 1
 BIN_SERVO2 RES 1
 BIN_SERVO3 RES 1
 ;--------------------------- VARIABLES DE LA EEPROM ---------------------------------------------------------------
 DIR_LECTURA RES 1
 EEPROM_READ RES 1
 DIR_EEPROM RES 1
 VALOR_EEPROM RES 1
 
 
RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

; TODO ADD INTERRUPTS HERE IF USED
INT_VECT    CODE 0x0004
    
SAVE:
    MOVWF   W_RAM
    SWAPF   STATUS,W
    MOVWF   STATUS_RAM
    SWAPF   FSR,W
    MOVWF  FSR_RAM

INT_TMR0:
    BTFSS   INTCON,T0IF
    GOTO    INT_RX
    
    BCF	INTCON,T0IF
    MOVF    SECUENCIA,W
    ADDWF   PCL, F
    GOTO    INICIO_PERIODO ;este contador LLEVA EN CONTROL DE LA SECUENCIA PARA LA GENERACION PWM
    GOTO    VAL_PWM1
    GOTO    VAL_PWM2
    
    CLRF    SECUENCIA
    INICIO_PERIODO ;EN LA PRIMERA FASE SE COLOCA EN 1 EL PIN RC0 Y RC3 SE ENCUENTRA EN 0
    BSF	PORTC, RC0 ;SE COLOCA EN 1
    MOVF    TRABAJO1,W 
    CLRF	TMR0
    SUBWF   TMR0,F  ;TMRO =  256 - TRABAJO1
    INCF    SECUENCIA,F ;A LA SIGUIENTE ENTRADA SE EJECUTA PWM1
    GOTO INT_RX
    
    VAL_PWM1
    BCF	PORTC,RC0 ;AL PASAR EL TIEMPO ESTABLECIDO POR LA VARIABLE TRABAJO 1
    BSF	PORTC, RC3
    MOVF   TRABAJO2,W
    CLRF TMR0
    SUBWF   TMR0,F ;256 - TRABAJO2
    INCF SECUENCIA,F
    GOTO INT_RX
    
    VAL_PWM2
    BCF	PORTC,RC0
    BCF	PORTC,RC3
    CLRF	TMR0 ;LA SIGUIENTE INTERRUPCION OCURRIRA DENTRO DE 4.09mS
    INCF SECUENCIA,F

INT_RX:
    BTFSS   PIR1, RCIF
    GOTO    INT_ADC
    
    MOVF    RCREG,W
    MOVWF   RC_AUX
    
    MOVF    SERVO_GUARDAR,W
    SUBLW .255	; SI Z ES 1 SIGNIFICA QUE SERVO_GUARDAR = 0 CON LO QUE EL DATO ANTERIOR
    BTFSC   STATUS, Z ; NO FUE NI A,B,C NI D, CON LO QUE EL DATO RECIBIDO EN ESTA OCACION NO INDICA
    GOTO    VER_VALOR; UN VALOR PARA EL PWM
    ;---------- SE EJECUTA AQUI SI  Z ES CERO -----------------------------------------
    INCF    RC_AUX, F; SE INCREMENTA PARA FACILITAR LA CONVERSION DE BCD A BIN 
    MOVF    SERVO_GUARDAR,W
    ADDWF   PCL,F ;LOOK UP TABLE
    GOTO    VALOR0; DEPENDIENDO DEL VALOR SERVO GUARDAR, QUE DEPENDE DE SI EL DATO ANTERIOR
    GOTO    VALOR1; ERA A,B,C o D, SE GUARDARA ESTE DATO ENTRANTE EN LA VARIABLE DE PWM CORRESPONDIENTE
    GOTO    VALOR2
    GOTO    VALOR3
    VALOR0
    ;PARA ESTO SE IRA DE LA MANO DE QUE CON UDATA LAS VARIABLES SE VAN ESCRIBIENDO UNA 
    ; TRAS OTRA EN LA RAM, EN DIRECCIONES CONTINUAS DE FORMA QUE LA DIRECCION
    ;DE SERVOX_UNIDADES_RC ES LA DIRECICON DE SERVOx_CENTENAS + 2
    ;ASI CONTADOR RC DETERMINA SI SE GUARDA EN CENTENAS DECENAS  O UNIDADES
    ; Y DE ESTA FORMA CON EL DIRECCIONAMIENTO INDIRECTO SE APUNTA AL VALOR NECESARIO
    ;SIN TENER QUE HACER VARIOS "SELECT CASE" SINO UNICAMENTE 1 "SELECT CASE"
    ;Y SE PUEDE GUARDAR TANTO A LAS DECENAS CENTENAS Y UNIDADES SE APUNTA AL SIGIENTE DATO DEL ARREGLO
    MOVF    RC_AUX,W 
    MOVLW SERVO0_CENTENAS_RX 
    ADDWF  CONTADOR_RC, W 
    MOVWF   FSR 
    MOVLW .48 ;(SE CONVIERTE A BCD)
    SUBWF   RC_AUX,W
    MOVWF   INDF 
    INCF    CONTADOR_RC,F ;
    GOTO FIN_VALOR
    VALOR1
     MOVF    RC_AUX,W 
    MOVLW SERVO1_CENTENAS_RX 
    ADDWF  CONTADOR_RC, W 
    MOVWF   FSR 
    MOVLW .48 ;(SE CONVIERTE A BCD)
    SUBWF   RC_AUX,W
    MOVWF   INDF 
    INCF    CONTADOR_RC,F ;
    GOTO FIN_VALOR
    VALOR2
    MOVF    RC_AUX,W 
    MOVLW SERVO2_CENTENAS_RX 
    ADDWF  CONTADOR_RC, W 
    MOVWF   FSR 
    MOVLW .48 ;(SE CONVIERTE A BCD)
    SUBWF   RC_AUX,W
    MOVWF   INDF 
    INCF    CONTADOR_RC,F ;
    GOTO FIN_VALOR
    VALOR3
    MOVF    RC_AUX,W 
    MOVLW SERVO3_CENTENAS_RX 
    ADDWF  CONTADOR_RC, W 
    MOVWF   FSR 
    MOVLW .48 ;(SE CONVIERTE A BCD)
    SUBWF   RC_AUX,W
    MOVWF   INDF 
    INCF    CONTADOR_RC,F ;
    FIN_VALOR ;AQUI SE VERIFICA SI EL CONTADOR YA ES 3
    MOVF    CONTADOR_RC,W
    SUBLW  .3
    BTFSS   STATUS,Z ;SI CONTADOR_RC ES 3 NTONCES SE SALTA LA INSTRUCCION
    GOTO    INT_ADC
    ;--------------- SE EJECUTA AQUI SI CONTAODOR_RC ES 3 --------------
    MOVLW .255
    CLRF    CONTADOR_RC
    MOVWF    SERVO_GUARDAR ;SE ACABA LA INSTRUCCION A LA ESPERA DE UNA NUEVA
    GOTO   INT_ADC
    ;------------------------------------------------------------------------------------------------
    VER_VALOR
    MOVF    RC_AUX,W
    SUBLW .65 ;SE VERIFICA SI EL VALOR ES A
    BTFSS STATUS, Z; SI LO ANTERIOR DA CERO NO SE SALTA
    GOTO  SERVO1
    ;-------- SE ES A SE EJECUTA AQUI--------------
    MOVLW   .0 ;VALOR QUE SE USARA PARA UN LOOK UP TABLE MAS ADELANTE
    MOVWF SERVO_GUARDAR	
    GOTO INT_ADC ;SE SALE
    
    SERVO1
    MOVF    RC_AUX,W
    SUBLW .66 ;SE VE SI ES B
    BTFSS   STATUS,Z
    GOTO SERVO2
    ;-------- SI ES B SE EJECUTA AQUI--------------
    MOVLW .1 ; LO MISMO QUE ANTES
    MOVWF   SERVO_GUARDAR
    GOTO    INT_ADC ; SE ESPERA A LA SIGUIENTE
    ;------------------------------------------------------------
    SERVO2
    MOVF    RC_AUX,W
    SUBLW .67 ;SE VERIFICA SI ES C
    BTFSS   STATUS,Z
    GOTO    SERVO3
    ;--------------- SI ES C SE EJECUTA AQUI -----------
    MOVLW .2
    MOVWF   SERVO_GUARDAR ;LO MISMO
    GOTO INT_ADC; SE ESPERA A QUE EL SIGUIENTE DATO ENTRE
    ;--------------------------------------------------------------
    SERVO3
    MOVF    RC_AUX,W
    SUBLW .68 ;SE VERIFICA SI ES D
    BTFSS   STATUS,Z
    GOTO VER_GUARDAR
    ;---------- SI ES D SE EJECUTA AQUI -------------------
    MOVLW .3
    MOVWF   SERVO_GUARDAR
    GOTO INT_ADC
    ;------------------------------------------------------------------
    VER_GUARDAR
    MOVF    RC_AUX, W
    SUBLW   .71 ;SE VERIFICA SI ES G
    BTFSC   STATUS, Z
    ;------------ SI ES G SE EJECUTA AQUI ----------------
    BSF	FLAGS, 0 ; SE INDICA QUE LA POSICION ACTUAL SE GUARDA
    COMF    PORTB,F
    NO_SERVO
    MOVLW    .255
    MOVWF   SERVO_GUARDAR    ;0 , SE AMPLIARA PARA FUTURAS MEJORAS
    
    
INT_ADC:
    BTFSS   PIR1, ADIF 
    GOTO    LOAD ;SI NO ESTA ACTIVA SE SALE
    
    BCF	PIR1, ADIF
    MOVF    CONTADOR_ADC,W
    ADDWF   PCL,F   
    GOTO    ES_ADC0
    GOTO    ES_ADC1
    GOTO    ES_ADC2
    GOTO    ES_ADC3
    CLRF    CONTADOR_ADC
    ES_ADC0
    MOVF    ADRESH, W
    MOVWF   ADC0
    BCF	ADCON0,CHS1
    BSF	ADCON0,CHS0 ;SE SELECCIONA EL CANAL 1
    GOTO FIN
    
    ES_ADC1
    MOVF    ADRESH, W
    MOVWF   ADC1
    BSF	ADCON0,CHS1
    BCF	ADCON0,CHS0 ;SE SELECCIONA EL CANAL 2
    GOTO FIN
   
    ES_ADC2
    MOVF    ADRESH,W
    MOVWF   ADC2
    BSF	ADCON0,CHS1
    BSF	ADCON0,CHS0 ;SE SELECCIONA EL CANAL 3
    GOTO FIN
    
    ES_ADC3
    MOVF    ADRESH,W
    MOVWF   ADC3
    BCF	ADCON0,CHS1
    BCF	ADCON0,CHS0 ;SE SELECCIONA CANAL 0
    
    FIN
    INCF    CONTADOR_ADC,F
    BSF	ADCON0,GO ;INICIA CONVERSION
    
LOAD:
    SWAPF   STATUS_RAM,W
    MOVWF   STATUS
    SWAPF   FSR_RAM,W
    MOVWF   FSR
    SWAPF   W_RAM,F
    SWAPF   W_RAM,W
    RETFIE
    
SEND_DATA:
    BTFSS   PIR1,TXIF ;SI NO ESTA OCUPADO SE SALTA EL RETURN
    RETURN
   
    ;----- SE DETERMINA QUE DATO HAY QUE ENVIAR -------------------------------
    MOVF    CONTADOR_TX,W
   ADDWF   PCL,F
    GOTO    UNO
    GOTO    DOS
    GOTO    TRES
    GOTO    COMA
    GOTO    CUATRO
    GOTO    CINCO
    GOTO    SEIS
    GOTO    COMA
    GOTO    SIETE
    GOTO    OCHO
    GOTO    NUEVE
    GOTO    COMA
    GOTO    DIEZ
    GOTO    ONCE
    GOTO    DOCE
    GOTO    FINAL
    CLRF    CONTADOR_TX

    UNO
    MOVF    VALOR_CENTENAS_SERVO0,W
    GOTO ENVIAR
    DOS
    MOVF VALOR_DECENAS_SERVO0,W
    GOTO ENVIAR
    TRES
    MOVF VALOR_UNIDADES_SERVO0,W
    GOTO ENVIAR
    CUATRO
    MOVF    VALOR_CENTENAS_SERVO1,W
    GOTO ENVIAR
    CINCO
    MOVF VALOR_DECENAS_SERVO1,W
    GOTO ENVIAR
    SEIS
    MOVF VALOR_UNIDADES_SERVO1,W
    GOTO ENVIAR
    SIETE
    MOVF    VALOR_CENTENAS_SERVO2,W
    GOTO ENVIAR
    OCHO
    MOVF VALOR_DECENAS_SERVO2,W
    GOTO ENVIAR
    NUEVE
    MOVF VALOR_UNIDADES_SERVO2,W
    GOTO ENVIAR
    DIEZ
    MOVF    VALOR_CENTENAS_SERVO3,W
    GOTO ENVIAR
    ONCE
    MOVF VALOR_DECENAS_SERVO3,W
    GOTO ENVIAR
    DOCE
    MOVF VALOR_UNIDADES_SERVO3,W
    GOTO ENVIAR
    COMA
    MOVLW   .44 ;COMA EN ASCII
    GOTO    ENVIAR_SIN_SUMA
    FINAL
    MOVLW   .10 ;SALTO DE LINEA
    GOTO    ENVIAR_SIN_SUMA
    ENVIAR
    ADDLW   .48 ;SE PASA DE BCD A ASCII
    ENVIAR_SIN_SUMA
    MOVWF   TXREG
    INCF    CONTADOR_TX,F
    RETURN

MAIN_PROG CODE                      ; let linker place main program
 
 START
    BCF	STATUS, IRP ;BANCO 0 Y 1 EN EL DIRECCIONAMIENTO INDIRECTO
    BSF	STATUS, RP1
    BSF	STATUS, RP0 ;BANCO 3
    
    MOVLW B'00001111'
    MOVWF ANSEL
    CLRF    ANSELH 
    
    BCF	OPTION_REG, T0CS ;FUENTE DE RELOL FOSC/4
    BCF	OPTION_REG, PSA ;PRESCALER ASIGNADO AL TMR0
    BCF	OPTION_REG, PS2
    BSF	OPTION_REG,PS1
    BSF	OPTION_REG,PS0 ;PRESCALER DE 1:16 (ESTO PARA QUE LOS VALORES OBTENIDOS EN LA RUTINA
			;VALOR PWM, TAMBIEN SEAN VALIDOS PARA ESTE TIMER)
    BCF	EECON1, EEPGD ;SE ACCEDE A LA MEMORIA DE DATOS
    BCF	STATUS,RP1 ;BANCO 1
    MOVLW   .255
    MOVWF   TRISA
    CLRF	   TRISC
    CLRF	   TRISB
    
    
    
    ;------------- INTERRUPCIONES -------------------------------------------------
    BSF	INTCON,GIE 
    BSF	INTCON, PEIE
  
    
    BSF	PIE1, ADIE ;INTERRUPCION ADC ACTIVADA
    BSF	PIE1, RCIE ;INTERRUPCION DE RECEPTOR EUSART
    ;---------------------------------------------------------------------------------------
    MOVLW .255 
    MOVWF  PR2 ;PERIODO DE  4.09 mS aproximadamente EN PWM
    CLRF    ADCON1 
     ;--------------------  EUSART ----------------------------------------------------
     BCF	TXSTA,TX9
     BSF	TXSTA, TXEN
     BCF	TXSTA, SYNC
     BSF	TXSTA, BRGH
     
      MOVLW   .25 ;9615 DE BAUDRATE
    MOVWF   SPBRG
    
    BCF	STATUS,RP0 ;BANCO 0
    
    BSF	RCSTA, SPEN
    BCF	RCSTA, RX9
    BSF	RCSTA, CREN

 
    ;------------------------- SIGIENTDO CON LAS INTERRUPCIONES -----------------
    
    BCF	INTCON, T0IF
    CLRF	TMR0
    BSF	INTCON, T0IE
    
    MOVLW   B'00001100' 
    MOVWF   CCP1CON ;MODO DE PWM EN P1A LOS DEMAS SON PINES NORMALES 
    MOVWF   CCP2CON ;PWM TAMBIEN
    
    MOVLW   B'0000110' ;TMR2 ENCENDIDO CON PRESCALES DE 1:16 Y POST SCALER DE 1 
    MOVWF   T2CON
    
    MOVLW   B'01000001' ;ADC CON FOSC/8, CANAL 0 Y ENCENDIDO
    MOVWF   ADCON0
    
    CLRF    ADC0
    CLRF    ADC1
    CLRF    ADC2
    CLRF    ADC3
    CLRF    CONTADOR_ADC
    CLRF    OPCION
    CLRF    SECUENCIA
    CLRF    CONTADOR_TX
    CLRF    CONTADOR_RC
    CLRF    SERVO_GUARDAR
    CLRF    VALOR_EEPROM
    MOVLW   .1
    MOVWF   OPCION
    MOVWF SERVO0_CENTENAS_RX  
    MOVWF SERVO0_DECENAS_RX 
    MOVWF   SERVO0_UNIDADES_RX 
    MOVWF SERVO1_CENTENAS_RX  
    MOVWF SERVO1_DECENAS_RX 
    MOVWF   SERVO1_UNIDADES_RX 
    MOVWF SERVO2_CENTENAS_RX  
    MOVWF SERVO2_DECENAS_RX 
    MOVWF   SERVO2_UNIDADES_RX 
    MOVWF SERVO3_CENTENAS_RX  
    MOVWF SERVO3_DECENAS_RX 
    MOVWF   SERVO3_UNIDADES_RX 
    MOVLW   .255
    MOVWF   DIR_EEPROM
    MOVWF   DIR_LECTURA ;PARA QUE AL INCREMENTAR SEA 0
    CLRF    FLAGS
    BSF	ADCON0, GO ;INICIA LA CONVERSION
    
LOOP:
    MOVF    PORTA_ACTUAL,W
    MOVWF   PORTA_ANTERIOR
    CALL    DELAY
    MOVF    PORTA, W
    MOVWF   PORTA_ACTUAL
    ;SE COMPRUEBA DE QUE SE HAYA SOLTADO EL BOTON
    BTFSS   PORTA_ANTERIOR, RA4
    GOTO    SA    
   ; ------------- SI SE 1 SE EJECUTA ESTO------------------
    BTFSC   PORTA_ACTUAL,RA4
    GOTO    SA
    ;---------- SI SE ANTERIOR ES 0 ----------------------------
    BCF	STATUS,C 
    RLF	OPCION, F
    
    MOVLW   .8
    SUBWF   OPCION,W
    BTFSS	STATUS,Z
    GOTO SA
    ;---------------------------------------------------------------
    MOVLW .1
    MOVWF   OPCION
    
    SA
    ;BCF	PIE1, ADIE
    BTFSC   OPCION, 0
    GOTO    ANALOGICO
    BTFSC   OPCION,1
    GOTO    COMPUTADORA
    BTFSC   OPCION,2
    GOTO    SECUENCIADO
    GOTO    LOOP
    
    ANALOGICO
    CLRF    PORTB
    BSF	PORTB,7
    
    MOVF    ADC0,W
    MOVWF   PWM0
    MOVF    ADC1,W
    MOVWF   PWM1
    MOVF    ADC2,W
    MOVWF   PWM2
    MOVF    ADC3,W
    MOVWF PWM3
    GOTO    CONVERSION
    
    COMPUTADORA 
    CLRF    PORTB
    BSF	PORTB,6
    
     ;--------------------- SE CONVIERTE EL BCD A BIN ---------------------------------------------------------------
    MOVLW SERVO0_CENTENAS_RX
    MOVWF   FSR
    CALL CONVERTIR_BCD_TO_BIN
    MOVF    VALOR_BIN,W
    MOVWF   BIN_SERVO0
    
    MOVLW SERVO1_CENTENAS_RX
    MOVWF   FSR
    CALL CONVERTIR_BCD_TO_BIN
    MOVF    VALOR_BIN,W
    MOVWF   BIN_SERVO1
    
    MOVLW SERVO2_CENTENAS_RX
    MOVWF   FSR
    CALL CONVERTIR_BCD_TO_BIN
    MOVF    VALOR_BIN,W
    MOVWF   BIN_SERVO2
    
    MOVLW SERVO3_CENTENAS_RX
    MOVWF   FSR
    CALL CONVERTIR_BCD_TO_BIN
    MOVF    VALOR_BIN,W
    MOVWF   BIN_SERVO3
    
    MOVF    BIN_SERVO0,W
    MOVWF   PWM0
    MOVF    BIN_SERVO1,W
    MOVWF   PWM1
    MOVF    BIN_SERVO2,W
    MOVWF   PWM2
    MOVF    BIN_SERVO3,W
    MOVWF PWM3
   
    GOTO    CONVERSION
    SECUENCIADO
    CLRF    PORTB
    BSF	PORTB, RB5
    
    MOVF    DIR_EEPROM,W
    SUBWF   DIR_LECTURA,W
    BTFSS   STATUS, Z
    GOTO    CARGA_VALORES_EEPROM
    MOVLW   .255
    MOVWF    DIR_LECTURA
    CARGA_VALORES_EEPROM
    INCF    DIR_LECTURA, F
    CALL    LECTURA
    MOVF    EEPROM_READ,W
    MOVWF   PWM0
    
    INCF    DIR_LECTURA, F
    CALL    LECTURA
    MOVF    EEPROM_READ,W
    MOVWF   PWM1
    
    INCF    DIR_LECTURA, F
    CALL    LECTURA
    MOVF    EEPROM_READ,W
    MOVWF   PWM2
    
    INCF    DIR_LECTURA, F
    CALL    LECTURA
    MOVF    EEPROM_READ,W
    MOVWF   PWM3
    
    CALL DELAY_MEDIO
    ;;CALL DELAY_MEDIO
    
    
    CONVERSION
    ;BSF	PIE1, ADIE
    MOVLW   PWM2
    MOVWF   FSR ;VALOR DEL ADC PARA EL VALO
     CALL    VALOR_PWM
    MOVF    AJUSTE_PWM,W
    MOVWF   CCPR1L
    
    MOVLW    PWM1
    MOVWF   FSR
    CALL    VALOR_PWM
    MOVF    AJUSTE_PWM
    MOVWF   CCPR2L
    
    MOVLW  PWM0
    MOVWF   FSR
    CALL   VALOR_PWM
    MOVF    AJUSTE_PWM,W
    MOVWF TRABAJO1
    	
    MOVLW   PWM3
    MOVWF   FSR
    CALL   VALOR_PWM
    MOVF    AJUSTE_PWM,W
    MOVWF TRABAJO2
    
    ;--------------------- AQUI SE CONVIERTE EL VALOR DEL SERVO EN BCD ------------------------------------
    MOVF    PWM0,W
    MOVWF   VALOR_BIN
    MOVLW   VALOR_CENTENAS_SERVO0
    MOVWF   FSR
   CALL CONVERTIR_BIN_TO_BCD ;EN ESTA RUTINA SE GUARDAN LOS VALORES 
   
    MOVF    PWM1,W
    MOVWF   VALOR_BIN
    MOVLW   VALOR_CENTENAS_SERVO1
    MOVWF   FSR
   CALL CONVERTIR_BIN_TO_BCD ;EN ESTA RUTINA SE GUARDAN LOS VALORES 
   
    MOVF    PWM2,W
    MOVWF   VALOR_BIN
    MOVLW   VALOR_CENTENAS_SERVO2
    MOVWF   FSR
   CALL CONVERTIR_BIN_TO_BCD ;EN ESTA RUTINA SE GUARDAN LOS VALORES 
   
    MOVF    PWM3,W
    MOVWF   VALOR_BIN
    MOVLW   VALOR_CENTENAS_SERVO3
    MOVWF   FSR
   CALL CONVERTIR_BIN_TO_BCD ;EN ESTA RUTINA SE GUARDAN LOS VALORES 
   
   
   CALL SEND_DATA
   
   BTFSS    FLAGS, 1 ;SI SE TIENE QUE REINICIAR
   GOTO	SEGUIR_CON_GUARDAR
   CLRF	DIR_EEPROM
   BCF	FLAGS,1
   
   SEGUIR_CON_GUARDAR
   BTFSS    FLAGS, 0; SE MIRA SI SE DESEA GUARDAR EL VALOR ACTUAL
   GOTO	LOOP
   
   INCF	DIR_EEPROM,F
   MOVF	PWM0,W
   MOVWF    VALOR_EEPROM
   CALL	ESCRIBIR_EEPROM
   
   INCF	DIR_EEPROM,F
   MOVF	PWM1,W
   MOVWF    VALOR_EEPROM
   CALL	ESCRIBIR_EEPROM  
   
   INCF	DIR_EEPROM,F
   MOVF	PWM2,W
   MOVWF    VALOR_EEPROM
   CALL	ESCRIBIR_EEPROM
   
   INCF	DIR_EEPROM,F
   MOVF	PWM3,W
   MOVWF    VALOR_EEPROM
   CALL	ESCRIBIR_EEPROM
   
  BCF	FLAGS,0
  GOTO LOOP    

CONVERTIR_BCD_TO_BIN:
    MOVF    INDF, W ;HACE USO DEL DIRECCIONAMIENTO INDIRECTO, PARA ACCEDER A LOS VALORES 
    MOVWF   VALOR_CENTENAS
    INCF    FSR,F
    MOVF    INDF,W
    MOVWF   VALOR_DECENAS
    INCF    FSR,F
    MOVF    INDF,W
    MOVWF   VALOR_UNIDADES
    
    CLRF VALOR_BIN
    CENTENAS_CONVERTIR
    MOVLW   .100
    DECFSZ VALOR_CENTENAS,F
    GOTO    SUMAR_CENTENA
    GOTO    DECENAS_CONVERTIR
    
    SUMAR_CENTENA
    ADDWF   VALOR_BIN, F
    GOTO CENTENAS_CONVERTIR
    
    DECENAS_CONVERTIR
    MOVLW .10
    DECFSZ VALOR_DECENAS,F
    GOTO    SUMAR_DECENA
    GOTO    UNIDADES_CONVERTIR
    
    SUMAR_DECENA
    ADDWF VALOR_BIN,F 
    GOTO    DECENAS_CONVERTIR
    
    UNIDADES_CONVERTIR
    MOVLW .1
    DECFSZ  VALOR_UNIDADES,F
    GOTO	SUMAR_UNIDADES
    RETURN
   
    SUMAR_UNIDADES
    ADDWF VALOR_BIN, F
    GOTO UNIDADES_CONVERTIR
    
    
CONVERTIR_BIN_TO_BCD:
    CLRF    VALOR_CENTENAS
    CLRF    VALOR_DECENAS
    CLRF    VALOR_UNIDADES
    ;PRIMERO SE INICIA CON LAS CENTENAS
    CENTENAS
    MOVLW   .100
    SUBWF   VALOR_BIN,W    ;EN EL FSR SE COLOCA LA DIRECCION DEL VALOR A CONVERTIR
    BTFSS   STATUS, C	; SI EL BIT C ES 1 QUIERE DECIR QUE INDF >= W 
    GOTO    DECENAS ;SI EL BIT ES CERO ES EJECUTA ESTO, LO QUE QUIERE DECIR QUE YA EL NUMEOR EN INDF
    ;ES MENOR O IGUAL A 100
    
    INCF    VALOR_CENTENAS,F
    MOVWF   VALOR_BIN
    GOTO CENTENAS ;VUELVE A RESTAR
    
    
    DECENAS
    MOVLW   .10
    SUBWF   VALOR_BIN,W
    BTFSS   STATUS,C  ;LO MISMO QUE CON CENTENAS 
    GOTO UNIDADES
    
    INCF    VALOR_DECENAS,F
    MOVWF   VALOR_BIN
    GOTO DECENAS
    
    UNIDADES
    MOVLW .1
    SUBWF   VALOR_BIN,W
    BTFSS   STATUS,C ;MISMA LOGICA QUE ANTERIORMENTE
    GOTO    GUARDAR
    
    INCF    VALOR_UNIDADES,F
    MOVWF VALOR_BIN
    GOTO UNIDADES
   
    GUARDAR
    MOVF    VALOR_CENTENAS,W ;SE VAN RECORRIENDO LOS VALORES 
    MOVWF   INDF
    
    INCF    FSR,F
    MOVF    VALOR_DECENAS,W
    MOVWF   INDF
    
    INCF    FSR,F
    MOVF   VALOR_UNIDADES,W
    MOVWF   INDF
    RETURN
    
    
VALOR_PWM:
    ;ESTA FUNCION LO QUE REALIZARA ES AJUSTAR EL VALOR QUE SE ENCUENTRA EN LA DIRECCION A LA
    ;QUE APUNTA EL REGISTRO SFR A UN VALOR EN EL CUAL EL PWM DE SALIDA TENGA UN ANCHO MINIMO
    ;DE 0.5 mS Y UN MAXIMO DE 2.4mS PARA QUE SE PUEDE APROVECHAR TODO EL RANGO DEL SERVOMOTOR
    BCF	STATUS, IRP ;DIRECCIONAMIENTO INDIRECTO APUNTANDO A BANCOS 0 Y 1
    
    BCF	STATUS,C ;SE COLOCA EN 0 BIT C PARA QUE RRF FUNCIONE COMO UN SHIFT 
    RRF	INDF, W ;SE DIVIDE POR 2 EL VALOR QUEDANDO ENTRE UN RANGO DE 0 A 126
    ADDLW   .31 ;SE LE SUMA 31 PARA QUE EL RESULTADO QUEDE ENTRE 31 Y 157 LO QUE SE TRADUCE A UN
		;ANCHO DE PULSO DE ENTRE 0.496 mS y 2.512 mS ABARCANDO LOS ANCHOS NECESARIOS
		;PARA QUE EL SERVOMOTOR FUNCIONEN DE 0 A 180 GRADOS
   MOVWF    AJUSTE_PWM 
   RETURN

ESCRIBIR_EEPROM:
    BCF	INTCON, GIE
    ;BSF	STATUS, IRP
    MOVF    DIR_EEPROM,W
    
    BSF	STATUS, RP1
    BCF	STATUS,RP0 ;BANCO 2
    
    MOVWF   EEADR
    
     BCF	STATUS, RP1
    BCF	STATUS,RP0 ;BANCO 0
    
    MOVF    VALOR_EEPROM,W
   
    BSF	STATUS, RP1
    BCF	STATUS,RP0 ;BANCO 2
    
    MOVWF   EEDATA ;SE CARGA EL DATO
    
    BSF	STATUS, RP0 ;BANCO 3
    BSF	EECON1, WREN ;ESCRITURA HABILITADA
    
    MOVLW   H'55'
    MOVWF   EECON2
    MOVLW   H'AA'
    MOVWF   EECON2 ;SECUENCIA DE ESCRITURA
    
    BSF	EECON1, WR ;INICIA LA ESCRIBTURA
    BCF	EECON1, WREN ;ESCRITURA DESHABILITADA 
    
   BTFSC    EECON1, WR
   GOTO	$-1
    
    BCF	STATUS, RP1
    BCF	STATUS,RP0 ;BANCO 0
    BSF	INTCON, GIE
    RETURN
    
LECTURA:
    
    BCF	INTCON,GIE ;SE DESABILITAN LAS INTERRUPCIONES DEBIDO A QUE SI SUCEDE ALGUNA EN ESTA
    ;PARTE DEL CODIGO NO SERA POSIBLE GUARDAR EL ENTORNO DE TRABAJO (STATUS Y W) Y TODA LA EJECUCION
    ;Y MUY POSIBLEMENTE AL REGRESAR DE LA INTERRUPCION EL CODIGO NO HAGA LO QUE DEBE HACER.
    MOVF   DIR_LECTURA, W
    BSF	STATUS, RP1
    BCF	STATUS, RP0 ;BANCO DOS
    
    MOVWF   EEADR
    
    BSF	STATUS, RP1
    BSF	STATUS, RP0 ;BANCO 3
    
    BSF	EECON1, RD ;SE LEE LA EEPROM DATA
    
    BCF	STATUS,RP0 ;BANCO 2
    
    MOVF    EEDATA, W ;SE CARGA EL VALOR EN  W
    
    BCF	STATUS, RP1 ;BANCO 0
    
    MOVWF EEPROM_READ 
    
    BSF	INTCON, GIE ;SE HABILITAN LAS INTERRUPCIONES 
    
    RETURN
DELAY_MEDIO:
    MOVLW   .100
    MOVWF   DELAY2
    DEL
    CALL DELAY
    DECFSZ  DELAY2,F
    GOTO    DEL
    RETURN
    
DELAY:
    MOVLW   .200
    MOVWF   DELAYMS
    DECFSZ   DELAYMS,F
    GOTO    $-1
    RETURN
    END